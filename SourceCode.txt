//must correct bug that enables computer to place ship at same location as user
//other or same bug: only 3/5 user ships shown on map when placed on x0, y0-4
// Did the computer place 2 ships on same location? Making user ship seem disappeared?

public class BattleShipsV2 {
    public static void main(String[] args) {
        System.out.println();
        System.out.println("**** Welcome to the Battle Ships games ****");
        System.out.println();
        System.out.println("Right now, the sea is empty.");
        System.out.println();

        int map[][] = new int[6][6];
        BattleShipsMap map1 = new BattleShipsMap(map);
        map1.displayMap(map);

        UserFleet uFleet1 = new UserFleet(0,0,map);
        uFleet1.PlacingShips();

        ComputerFleet cFleet1 = new ComputerFleet(0,0,map);
        cFleet1.PlacingShips();
        map1.displayMap(map);
        
        //both user and computer start with 5 ships. Game ends when one loses all 5.
        //can further divide into subclass?
        int userShips = 5;
        int computerShips = 5;
        GameOver go1 = new GameOver(userShips,computerShips,map);

        while(userShips != 0 || computerShips != 0) {
            map1.displayMap(map);
            UserAttack uAttack1 = new UserAttack(0,0,map);
            int u = uAttack1.TargetingShip();
            if (u == 1) {
                computerShips--;
            } else userShips += u;
            go1.checkWin(userShips, computerShips, map);

            ComputerAttack cAttack1 = new ComputerAttack(0,0,map);
            int c = cAttack1.TargetingShip();
            if (c == -1) {
                userShips--;
            } else computerShips -= c;
            go1.checkWin(userShips, computerShips, map);

            System.out.println("Your ships: " + userShips + " | Computer ships: " + computerShips);
            System.out.println("--------------------------------------------");
        }
}


/*
map[row][col] =
0 = empty, no action yet // 2 = computer ships location (empty/not visible to user)
1 = user's own ships location (visible to user on map '@')
3 = strike! user misses (visible to user on map '-' )
4 = strike! computer missed (visible ('_'))
11 = strike! user sinks own ship ('x') // 12 = strike! computer sinks user ship ('x')
21 = strike! user sinks computer ship ('!') // 22 = computer sinks own ship ('!')
 */

public class BattleShipsMap {
    int map[][];

    BattleShipsMap(int[][] map) {
        this.map = map;
    }

    int[][] displayMap(int map[][]){
        System.out.println("   012345");
        for(int i = 0; i < map.length; i++){
            System.out.print( i + " |");
            //refer to introductory comment  "map[i][j] ="
            for(int j = 0; j < map.length; j++){
                if (map[i][j] == 0||map[i][j] == 2){
                    System.out.print(" ");
                } else if(map[i][j] == 1){
                    System.out.print("@");
                } else if(map[i][j] == 3||map[i][j] == 4){
                    System.out.print("-");
                } else if(map[i][j] == 11 ||map[i][j] == 12){
                    System.out.print("x");
                } else if(map[i][j] == 21 || map[i][j] == 22){
                    System.out.print("!");
                }
            }
            System.out.println("| " + i);
        }
        System.out.println("   012345");
        return this.map;
    }
}


public abstract class Fleet {
    int x;
    int y;
    int map[][];

    public Fleet(int x, int y, int map[][]) {
        this.x = x;
        this.y = y;
        this.map = map;
    }
}


import java.util.Scanner;

public class UserFleet extends Fleet {
    public UserFleet(int x, int y, int[][] map) {
        super(x, y, map);
    }

    public int PlacingShips(){
        Scanner input = new Scanner(System.in);

        for (int i = 1; i < 6; i++) {
            System.out.print("Enter X coordinate [0-5] for your ship " + i + ": ");
            int x = input.nextInt();
            System.out.print("Enter Y coordinate [0-5] for your ship " + i + ": ");
            int y = input.nextInt();

            if (map[x][y] == 0) {
                map[x][y] = 1;
            } else if (x < 0 || y < 0 || x > 5 || y > 5) {
                System.out.println("You must play within the bounds of the map");
                i--;
            } else {
                System.out.println("You already have a ship on this position");
                i--;
            }
        }
        System.out.println();
        return x & y;
    }
}



import java.util.Random;

public class ComputerFleet extends Fleet {

    public ComputerFleet(int x, int y, int map[][]) {
        super(x, y, map);
    }

    public int PlacingShips() {
        Random rand = new Random();
        for (int k = 1; k < 6; k++) {
            int x = rand.nextInt(6);
            int y = rand.nextInt(6);
            while (!(map[x][x] == 0)) {
                x = rand.nextInt(6);
                y = rand.nextInt(6);
            }
            //watch out for this return statement ... don't think the next lines are used
            //return map[x][y] = 2;
            map[x][y] = 2;
        }
        System.out.println("Robot ships deployed.");
        System.out.println("----------------------------");
        return x & y;
    }
}



import java.util.Scanner;

public class UserAttack{
    int x;
    int y;
    int map[][];

    public UserAttack(int x, int y, int map[][]) {
        this.x = x;
        this.y = y;
        this.map = map;
    }

    public int TargetingShip(){
        Scanner input = new Scanner(System.in);
        System.out.print("Choose a coordinate X [0-5] to strike ship: ");
        int x = input.nextInt();
        System.out.print("Choose a coordinate Y [0-5] to strike ship: ");
        int y = input.nextInt();

        if (map[x][y] == 1){
            map[x][y] = 11;
            System.out.println("Oh no... you have sunk your own ship.");
            System.out.println();
            return -1;
        } else if(map[x][y] == 2) {
            map[x][y] = 21;
            System.out.println("BAM!... you have sunk a robot ship");
            System.out.println();
            return 1;
        } else if (map[x][y] > 2){
            System.out.println("Position already played... Try again!");
            System.out.println();
            return TargetingShip();
            //return TargetingShip(map);
        } else{
            System.out.println("SPLASH! ... You missed target!");
            map[x][y] = 3;
            System.out.println();
            return 0;
        }
    }
}



import java.util.Random;

public class ComputerAttack {
    int x;
    int y;
    int map[][];

    public ComputerAttack (int x, int y, int map[][]) {
        this.x = x;
        this.y = y;
        this.map = map;
    }
    public int TargetingShip(){
        Random rand = new Random();
        int x = rand.nextInt(6);
        int y = rand.nextInt(6);

        if (map[x][y] == 1) {
            map[x][y] = 12;
            System.out.println("STRIKE!... computer sinks your ship!");
            System.out.println();
            return -1;
        } else if(map[x][y] == 2) {
            map[x][y] = 22;
            System.out.println("Hahaha!... computer sunk its own ship!");
            System.out.println();
            return 1;
        } else if (map[x][y] > 2){
            return TargetingShip();
        } else  {
            map[x][y] = 3;
            System.out.println("SPLASH!... computer missed target!");
            System.out.println();
            return 0;
        }
    }
}




public class GameOver {
    int userShips;
    int computerShips;
    int map[][];

    public GameOver(int userShips, int computerShips, int[][] map) {
        this.userShips = userShips;
        this.computerShips = computerShips;
        this.map = map;
    }
    void checkWin(int userShips, int computerShips, int map[][]){
        if(userShips == 0){
            //BattleShipsMap.displayMap(map);
            System.out.println("********************************************");
            System.out.println("Too bad... the computer won the Battle Ships game... What a shame...");
            System.out.println("****** Your ships: " + userShips + " | Computer ships: " + computerShips + " ******");
            System.out.println("********************************************");
            System.exit(0);
        }
        if(computerShips == 0){
            //BattleShipsMap.displayMap(map);
            System.out.println();
            System.out.println("********************************************");
            System.out.println("******          YOU WIN !!!          ******");
            System.out.println("****** Your ships: " + userShips + " | Computer ships: " + computerShips + " ******");
            System.out.println("********************************************");
            System.exit(0);
        }
    }
}



